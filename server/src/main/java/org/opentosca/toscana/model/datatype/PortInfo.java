package org.opentosca.toscana.model.datatype;

import java.util.Objects;
import java.util.Optional;
import java.util.Set;

import lombok.Data;
import lombok.Singular;

/**
 Describes network port information.
 <p>
 The properties (or attributes) of PortInfo may or may not be required depending on usage context.
 <p>
 (TOSCA Simple Profile in YAML Version 1.1, p. 144)
 */
@Data
public class PortInfo {

    // TODO this class needs to get reworked completely (use ToscaKeys instead of normal fields - just like in the Credential class)

    /**
     The logical network port name.
     <p>
     (TOSCA Simple Profile in YAML Version 1.1, p. 144)
     */
    private final String portName;

    /**
     The unique ID for the network port generated by the network provider.
     <p>
     (TOSCA Simple Profile in YAML Version 1.1, p. 144)
     */
    private final String portId;

    /**
     The unique ID for the network.
     <p>
     (TOSCA Simple Profile in YAML Version 1.1, p. 144)
     */
    private final String networkId;

    /**
     The unique media access control address (MAC address) assigned to the port.
     <p>
     (TOSCA Simple Profile in YAML Version 1.1, p. 144)
     */
    private final String macAddress;

    /**
     The list of IP address(es) assigned to the port.
     <p>
     (TOSCA Simple Profile in YAML Version 1.1, p. 144)
     */
    private final Set<String> addresses;

    public PortInfo(String portName,
                    String portId,
                    String networkId,
                    String macAddress,
                    @Singular Set<String> addresses) {
        this.portName = portName;
        this.portId = portId;
        this.networkId = networkId;
        this.macAddress = macAddress;
        this.addresses = Objects.requireNonNull(addresses);
    }

    /**
     @return {@link #portName}
     */
    public Optional<String> getPortName() {
        return Optional.ofNullable(portName);
    }

    /**
     @return {@link #portId}
     */
    public Optional<String> getPortId() {
        return Optional.ofNullable(portId);
    }

    /**
     @return {@link #networkId}
     */
    public Optional<String> getNetworkId() {
        return Optional.ofNullable(networkId);
    }

    /**
     @return {@link #macAddress}
     */
    public Optional<String> getMacAddress() {
        return Optional.ofNullable(macAddress);
    }
}
